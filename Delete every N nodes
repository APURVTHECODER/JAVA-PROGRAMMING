public class Solution {
	
	public static LinkedListNode<Integer> skipMdeleteN(LinkedListNode<Integer> head, int M, int N) {
    	if (M==0)
    	{
    	return null;
    	}
    	if (N==0)
    	{
    	return head;
    	}
    
        LinkedListNode<Integer> temp1=head;
        LinkedListNode<Integer> delnode=null;
        
       while(temp1!=null)
       {
        int count1=0;
        while(count1<M-1 && temp1!=null)
        {
            count1++;
            temp1=temp1.next;
        }
            if(temp1==null)
            {
                break;
            }
        delnode=temp1.next;
         int i=0;
        while(i<N && delnode!=null)
        {
            	delnode=delnode.next;
            	i++;
        }   
            temp1.next=delnode;
                temp1=delnode;  
           
       }
  		return head; 
	}
}
//     	if (M==0)
//         {
//             return null;
//         }
//         if (N==0)
//         {
//             return head;
//         }
    
//         LinkedListNode<Integer> node=head,delNode=null;
//         while(node!=null)
//         {
//             for (int i=0;i<M-1 && node!=null;i++)
//             {
//                 //System.out.print(node.data+" ");
//                 node=node.next;
//             }
//             //System.out.println();
//             if (node==null)
//             {
//                 break;
//             }
            
//             delNode=node.next;         
//             for (int i=0;i<N && delNode!=null;i++)
//             {
//                 //System.out.print(delNode.data+" ");
//                 delNode=delNode.next;
//             }
//             node.next=delNode;
//             node=delNode;
//         }
         
//         return head;
// 	}
// }      
        
        
        
        
        
        
        
        
        
        
        
        
