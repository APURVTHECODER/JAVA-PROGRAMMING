public class Solution {

	/*	Binary Tree Node class 
	 * 
	 * 	class BinaryTreeNode<T> {
			T data;
			BinaryTreeNode<T> left;
			BinaryTreeNode<T> right;
			
			public BinaryTreeNode(T data) {
				this.data = data;
			}
		}
		*/
	
		public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr, int n){
            return SortedArrayToBSThelper(arr,0,n-1);
		}
    public static BinaryTreeNode<Integer> SortedArrayToBSThelper(int[] arr, int si,int ei)
    {
             if(si>ei)
            {
                return null;
            }
           
			int mid=(si+ei)/2;
             BinaryTreeNode<Integer> rootNode=new BinaryTreeNode<Integer> (arr[mid]);
           rootNode.left=SortedArrayToBSThelper(arr,si,mid-1);
            rootNode.right=SortedArrayToBSThelper(arr,mid+1,ei);
            return rootNode;
    }
	}
