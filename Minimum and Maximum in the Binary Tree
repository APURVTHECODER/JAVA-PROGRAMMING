/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

*/



/*

	Representation of the Pair Class

	class Pair<T, U> {
		T minimum;
		U maximum;

		public Pair(T minimum, U maximum) {
			this.minimum = minimum;
			this.maximum = maximum;
		}

	}

*/

public class Solution {

public static Pair<Integer,Integer> maxMin=new Pair<Integer,Integer>(Integer.MAX_VALUE,Integer.MIN_VALUE);
	public static Pair<Integer,Integer> getMinAndMax(BinaryTreeNode<Integer> root) {
        getMinAndMaxHelper(root);
        return maxMin;     
	}
     public static void getMinAndMaxHelper(BinaryTreeNode<Integer> root)
    {
       if(root==null)
       {
           return;
       }    
         int rootdata=root.data;
         int maxvalue=maxMin.maximum;
         if(rootdata>maxvalue)
         {
             maxMin.maximum=root.data;
         }
         int minvalue=maxMin.minimum;
         if(rootdata<minvalue)
         {
             maxMin.minimum=root.data;
         } 
         getMinAndMaxHelper(root.left);
         getMinAndMaxHelper(root.right);
     }
}
