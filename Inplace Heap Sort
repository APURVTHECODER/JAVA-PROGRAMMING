public class Solution {
	public static void heapify(int arr[],int i, int n)
    {
        int parentindex=i;
        int leftchildindex=2*i+1;
        int rightchildindex=2*i+2;
        
        while(leftchildindex<n)
        {
            int minindex=parentindex;
            if(arr[leftchildindex]<arr[minindex])
            {
                minindex=leftchildindex;
            }
            if(rightchildindex<n && arr[rightchildindex]<arr[minindex])
            {
                minindex=rightchildindex;
            }
            if(parentindex==minindex)
            {
                break;
            }
            int temp=arr[parentindex];
            arr[parentindex]=arr[minindex];
            arr[minindex]=temp;
            parentindex=minindex;
            leftchildindex=2*parentindex+1;
            rightchildindex=2*parentindex+2;
            
        }
        
    }
	public static void inplaceHeapSort(int arr[]) {
	int n=arr.length;
        for(int i=n/2-1;i>=0;i--)
        {
            heapify(arr,i,n);
        }
        for(int i=n-1;i>=0;i--)
        {
            int temp=arr[i];
            arr[i]=arr[0];
            arr[0]=temp;
            heapify(arr,0,i);
        }
        
		
	}
}
