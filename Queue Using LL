public class Queue {
    Node front;
    Node rear;
    int size;
	
	//Define the data members


	public Queue() {
		//Implement the Constructor
        front=null;
        rear=null;
        size=0;
	}
	


	/*----------------- Public Functions of Stack -----------------*/


	public int getSize() { 
		//Implement the getSize() function
        
        return size;
    }


    public boolean isEmpty() { 
    	//Implement the isEmpty() function
        
        return size==0;
    }


    public void enqueue(int data) {
    	//Implement the enqueue(element) function
         Node node=new Node(data);
        if(size==0)
        {
            front=node;
            rear=node;
        }
        else
        {
            rear.next=node;
            rear=rear.next;
        }
        size++;
        
    }


    public int dequeue() {
    	//Implement the dequeue() function
       
        if(front==null)
        {
            rear=null;
            return -1;
        }
        else
        {
             int temp=front.data;
            	front=front.next;
        size--;
        return temp;
        }
  	
    }


    public int front() {
    	//Implement the front() function
        if(front==null)
        {
            return -1;
        }
        else
        {
        
        return front.data;
        }
    }
}
