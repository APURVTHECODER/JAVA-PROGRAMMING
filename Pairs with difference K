import java.util.HashMap;
public class Solution {

	public static int getPairsWithDifferenceK(int arr[], int k) {
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<arr.length;i++)
        {
            if(map.containsKey(arr[i]))
            {
                map.put(arr[i],map.get(arr[i])+1);
            }
            else
            {
                map.put(arr[i],1);
            }
        }
        int countPairs=0;
        if (k==0)
        {
            for (Integer i: map.keySet())
        	{
                int val=map.get(i);
            	countPairs=countPairs+(val*(val-1))/2;
        	}
            return countPairs;
        }
        for (Integer i: map.keySet())
        {
            if (map.containsKey(k+i))
            {
            	countPairs=countPairs+(map.get(i)*map.get(k+i));  
            }
            if (map.containsKey(i-k))
            {
            	countPairs=countPairs+(map.get(i)*map.get(i-k));   
            }
        }
        countPairs=countPairs/2;
        return countPairs;
        // int count=0;
        // for(int i=0;i<arr.length;i++)
        // {
        //     int temp=arr[i]-k;
        //     if(map.containsKey(temp))
        //     {
        //         count++;
        //         if(map.get(arr[i])>1)
        //         {
        //              map.put(arr[i],map.get(arr[i])-1);
        //         }
        //         else
        //         {
        //             map.remove(arr[i]);
        //         }
        //     }
        // }
        // return count;
	}
}
